---
description: 
globs: 
alwaysApply: true
---
# 🔧 开发环境与工具规范

## 🚨 触发场景：所有涉及PowerShell命令生成、终端操作分析的请求

### 1. 🛡️ PowerShell控制台稳定性保障

#### PSConsoleReadLine模块预检机制：
```powershell
# 🔴 强制要求：生成PowerShell命令前自动检查模块完整性
Get-Module PSConsoleReadLine -ListAvailable

# 🔴 模块损坏时优先修复
if ($module.Version -ne $expectedVersion) {
    Update-Module PSConsoleReadLine -Force
}
```

#### 控制台缓冲区参数防御：
```powershell
# ✅ 正确：添加参数范围验证
if ($top -lt 0 -or $top -ge $maxSize) { 
    Write-Error "参数 top 超出合法范围（当前值: $top，最大允许: $($maxSize-1)）"; 
    return 
}
```

#### 无效命令拦截系统：
- 对生成的PowerShell命令进行预扫描
- 包含无法识别的cmdlet/函数时自动替换
- 输出错误预警：⚠️ 命令 "{cmd}" 无效，推荐替换为 [合法候选列表]

#### 中文字符安全编码处理：
```powershell
# 🔴 强制配置：所有涉及中文字符的终端操作
[Console]::OutputEncoding = [Text.UTF8Encoding]::UTF8  
[Console]::InputEncoding = [Text.UTF8Encoding]::UTF8
```

#### PowerShell故障处理升级方案：
1. **方法1**: PSConsoleReadLine模块修复
2. **方法2**: 控制台缓冲区参数验证与重置
3. **方法3**: 无效命令自动替换
4. **方法4**: 中文字符UTF-8编码强制配置
5. **方法5**: 控制台完全重置
6. **最后方案**: PowerShell版本兼容性检查

### 2. 🔍 文件搜索命令规范

#### 强制要求：项目文件统计前必须先了解目录结构
```powershell
# 🔴 第一步：总是先查看目录结构
list_dir pages  # 或者 Get-ChildItem pages -Directory

# 🔴 第二步：根据结构选择正确命令
# 如果文件在子目录中，必须使用 -Recurse
Get-ChildItem pages -Recurse -Include "*.js" | Measure-Object | Select-Object -ExpandProperty Count
```

#### 项目类型与文件结构对应关系：

**微信小程序项目：**
```powershell
# ✅ 正确：小程序页面在子目录中
Get-ChildItem pages -Recurse -Include "*.js"
Get-ChildItem pages -Recurse -Include "*.wxml"
Get-ChildItem components -Recurse -Include "*.js"
```

**Vue/React项目：**
```powershell
# ✅ 正确：组件在src/components子目录
Get-ChildItem src -Recurse -Include "*.vue"
Get-ChildItem src -Recurse -Include "*.jsx"
```

**Node.js项目：**
```powershell
# ✅ 正确：模块可能在多层目录
Get-ChildItem . -Recurse -Include "*.js" -Exclude "node_modules\*"
```

### 3. 🎯 命令复杂度控制与中文字符处理

#### 简化命令，避免缓冲区问题：
```powershell
# ✅ 简化命令
Get-ChildItem 目录 -Recurse -Include "*.扩展名" | Measure-Object

# ❌ 避免过长的管道命令
Get-ChildItem 目录 -Recurse -Include "*.扩展名" | ForEach-Object {...很长的处理逻辑...}
```

#### 分步执行策略：
```powershell
# ✅ 分解复杂操作
$files = Get-ChildItem pages -Recurse -Include "*.js"
$count = ($files | Measure-Object).Count
Write-Host "找到 $count 个JS文件"
```

### 4. 🏗️ 微信小程序开发工具标准

#### 强制使用规范：
- ✅ **只使用微信开发者工具进行语法检查**
- ✅ **只使用PowerShell原生命令进行文件操作**
- ❌ **严禁使用node、npm等Web工具**
- ❌ **严禁使用webpack/babel等构建工具**

#### 微信小程序开发环境要求：
```javascript
// ✅ 正确：在微信开发者工具中打开项目文件夹
// 项目根目录包含：app.js, app.json, app.wxss

// ❌ 错误：尝试使用npm命令启动
// npm start  // 微信小程序不支持
```

#### 语法检查与调试：
- 🔧 使用微信开发者工具的编译器检查语法
- 🔧 使用开发者工具的调试面板排查问题
- 🔧 通过开发者工具预览和真机调试

#### 禁止使用的工具列表：
- `npm --version` 
- `node -c` 语法检查
- `webpack/babel` 等Web构建工具
- Linux/Bash命令语法

### 5. 🎨 Canvas兼容性检查系统

#### 已建立完整的Canvas兼容性检查系统：
```javascript
// ✅ 兼容性检查工具 (utils/compatibility-check.js)
const checkCanvasAPI = (ctx) => {
  return {
    createLinearGradient: typeof ctx.createLinearGradient === 'function',
    createRadialGradient: typeof ctx.createRadialGradient === 'function',
    quadraticCurveTo: typeof ctx.quadraticCurveTo === 'function',
    bezierCurveTo: typeof ctx.bezierCurveTo === 'function', 
    setLineDash: typeof ctx.setLineDash === 'function',
    filter: 'filter' in ctx
  }
}
```

#### 智能绘制策略选择：
- **支持贝塞尔曲线** → 流线型设计，视觉美感95%+
- **不支持时** → 自动降级为直线设计，确保100%兼容性
- **渐变支持检测** → createRadialGradient、filter等API支持情况检测

#### Canvas API兼容性集成示例：
```javascript
// ✅ 在pages/lottery/lottery.js中集成兼容性检查
const compatibility = checkCanvasAPI(ctx)
if (compatibility.quadraticCurveTo && compatibility.createRadialGradient) {
  // 高级绘制策略
  drawAdvancedLottery(ctx)
} else {
  // 降级绘制策略
  drawBasicLottery(ctx)
}
```

### 6. 📋 执行前检查清单

#### PowerShell文件操作前必须确认：
- [ ] 已了解项目的文件组织结构
- [ ] 根据结构选择了正确的搜索参数（-Recurse等）
- [ ] 命令复杂度适中，不会导致控制台异常
- [ ] 对于微信小程序项目，使用递归搜索页面文件
- [ ] 配置了正确的UTF-8编码
- [ ] 检查PSConsoleReadLine模块状态
- [ ] 验证命令参数范围合法性

#### 常见项目类型的正确命令模板：
```powershell
# 微信小程序文件统计
Get-ChildItem pages -Recurse -Include "*.js" | Measure-Object
Get-ChildItem components -Recurse -Include "*.js" | Measure-Object

# Vue项目文件统计
Get-ChildItem src -Recurse -Include "*.vue" | Measure-Object

# React项目文件统计
Get-ChildItem src -Recurse -Include "*.jsx","*.tsx" | Measure-Object

# 通用Web项目文件统计
Get-ChildItem . -Recurse -Include "*.js","*.ts" -Exclude "node_modules\*" | Measure-Object
```

### 7. ⚡ 故障处理与版本兼容

#### PowerShell控制台重置方案：
1. **方法1**: 模块修复 - `Update-Module PSConsoleReadLine -Force`
2. **方法2**: 缓冲区重置 - `[Console]::SetBufferSize($width, $height)`
3. **方法3**: 控制台重启 - 关闭并重新打开PowerShell
4. **方法4**: 编码配置 - 强制UTF-8编码
5. **方法5**: 版本检查 - 考虑PowerShell版本兼容性问题

#### 自动检查触发条件：
- 包含 `Get-ChildItem` 且缺少 `-Recurse` 的文件统计命令
- 项目文件检查前没有先查看目录结构
- 超过3个管道操作的复杂PowerShell命令
- 包含中文字符但未配置UTF-8编码的命令

#### 指令执行超时处理规则：
- 🚨 **120秒超时规则**：指令运行超过120秒无结果时自动重试
- 🔄 **自动重试机制**：第一次重试相同指令，第二次切换解决方案
- ⚡ **性能优化**：优先使用简化命令避免长时间阻塞

## 🎯 规则优先级：高 - 直接影响开发效率和环境稳定性

---
**适用范围**: 所有使用PowerShell进行项目文件操作和微信小程序开发的场景  
**最后更新**: 2025年1月2日
**整合状态**: 已整合1.mdc中的开发环境相关规则

