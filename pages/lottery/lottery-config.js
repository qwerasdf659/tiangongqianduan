// pages/lottery/lottery-config.js - Áªü‰∏ÄÁöÑÊäΩÂ•ñÈÖçÁΩÆÁÆ°ÁêÜ
// üî¥ ËøôÊòØÈ°πÁõÆ‰∏≠ÂîØ‰∏ÄÁöÑÂ•ñÂìÅÊï∞ÊçÆÊ∫êÔºåÊâÄÊúâÂÖ∂‰ªñÂú∞ÊñπÈÉΩÂ∫îËØ•ÂºïÁî®ËøôÈáåÁöÑÈÖçÁΩÆ

/**
 * Ê†áÂáÜÂ•ñÂìÅÈÖçÁΩÆ - È§êÂéÖÁßØÂàÜÊäΩÂ•ñÁ≥ªÁªü
 * ÂåÖÂê´8‰∏™Â•ñÂìÅÔºåÊåâÁÖß45Â∫¶Á≠âÂàÜÊéíÂàóÂú®ËΩ¨Áõò‰∏ä
 */
const STANDARD_PRIZES = [
  { 
    id: 1, 
    name: 'ÂÖ´ÂÖ´ÊäòÂà∏', 
    angle: 0, 
    color: '#FF6B35', 
    is_activity: true, 
    type: 'coupon', 
    value: 0.88, 
    probability: 0.15 
  },
  { 
    id: 2, 
    name: '‰πùÂÖ´ÊäòÂà∏', 
    angle: 45, 
    color: '#4ECDC4', 
    is_activity: false, 
    type: 'coupon', 
    value: 0.98, 
    probability: 0.20 
  },
  { 
    id: 3, 
    name: 'ÁîúÂìÅ1‰ªΩ', 
    angle: 90, 
    color: '#FFD93D', 
    is_activity: false, 
    type: 'physical', 
    value: 0, 
    probability: 0.25 
  },
  { 
    id: 4, 
    name: 'ÈùíËèú1‰ªΩ', 
    angle: 135, 
    color: '#6BCF7F', 
    is_activity: false, 
    type: 'physical', 
    value: 0, 
    probability: 0.15 
  },
  { 
    id: 5, 
    name: 'Ëôæ1‰ªΩ', 
    angle: 180, 
    color: '#FF6B6B', 
    is_activity: false, 
    type: 'physical', 
    value: 0, 
    probability: 0.10 
  },
  { 
    id: 6, 
    name: 'Ëä±Áî≤1‰ªΩ', 
    angle: 225, 
    color: '#4DABF7', 
    is_activity: false, 
    type: 'physical', 
    value: 0, 
    probability: 0.08 
  },
  { 
    id: 7, 
    name: 'È±øÈ±º1‰ªΩ', 
    angle: 270, 
    color: '#9775FA', 
    is_activity: false, 
    type: 'physical', 
    value: 0, 
    probability: 0.05 
  },
  { 
    id: 8, 
    name: 'ÁîüËÖåÊãºÁõò', 
    angle: 315, 
    color: '#FFB84D', 
    is_activity: true, 
    type: 'physical', 
    value: 0, 
    probability: 0.02 
  }
]

/**
 * ÊäΩÂ•ñÂü∫Á°ÄÈÖçÁΩÆ
 */
const LOTTERY_CONFIG = {
  costPoints: 100,        // ÂçïÊ¨°ÊäΩÂ•ñÊ∂àËÄóÁßØÂàÜ
  dailyLimit: 10,         // ÊØèÊó•ÊäΩÂ•ñÊ¨°Êï∞ÈôêÂà∂
  rules: 'ÊØèÊ¨°ÊäΩÂ•ñÊ∂àËÄó100ÁßØÂàÜÔºåÊØèÊó•ÊúÄÂ§öÂèØÊäΩÂ•ñ10Ê¨°',
  wheelSize: 8,           // ËΩ¨ÁõòÂàÜÂâ≤Êï∞Èáè
  anglePerSlice: 45       // ÊØè‰∏™ÊâáÂΩ¢ËßíÂ∫¶ (360/8)
}

/**
 * Â∫îÊÄ•ÂêéÂ§áÂ•ñÂìÅÈÖçÁΩÆÔºà‰ªÖÁî®‰∫éCanvasÁªòÂà∂Â§±Ë¥•Êó∂ÁöÑÈôçÁ∫ßÂ§ÑÁêÜÔºâ
 */
const FALLBACK_PRIZES = [
  { id: 1, name: 'ÂÖ´ÂÖ´ÊäòÂà∏', color: '#FF6B35' },
  { id: 2, name: '‰πùÂÖ´ÊäòÂà∏', color: '#4ECDC4' },
  { id: 3, name: 'ÁîúÂìÅ1‰ªΩ', color: '#FFD93D' },
  { id: 4, name: 'ÈùíËèú1‰ªΩ', color: '#6BCF7F' },
  { id: 5, name: 'Ëôæ1‰ªΩ', color: '#FF6B6B' },
  { id: 6, name: 'Ëä±Áî≤1‰ªΩ', color: '#4DABF7' },
  { id: 7, name: 'È±øÈ±º1‰ªΩ', color: '#9775FA' },
  { id: 8, name: 'ÁîüËÖåÊãºÁõò', color: '#FFB84D' }
]

/**
 * Ëé∑ÂèñÊ†áÂáÜÂ•ñÂìÅÈÖçÁΩÆ
 * @returns {Array} Ê†áÂáÜÂ•ñÂìÅÊï∞ÁªÑ
 */
function getStandardPrizes() {
  return JSON.parse(JSON.stringify(STANDARD_PRIZES)) // Ê∑±Êã∑Ë¥ùÈÅøÂÖç‰øÆÊîπÂéüÂßãÊï∞ÊçÆ
}

/**
 * Ëé∑ÂèñÊäΩÂ•ñÂü∫Á°ÄÈÖçÁΩÆ
 * @returns {Object} ÊäΩÂ•ñÈÖçÁΩÆÂØπË±°
 */
function getLotteryConfig() {
  return { ...LOTTERY_CONFIG }
}

/**
 * Ëé∑ÂèñÂ∫îÊÄ•ÂêéÂ§áÂ•ñÂìÅÈÖçÁΩÆ
 * @returns {Array} ÂêéÂ§áÂ•ñÂìÅÊï∞ÁªÑ
 */
function getFallbackPrizes() {
  return JSON.parse(JSON.stringify(FALLBACK_PRIZES))
}

/**
 * È™åËØÅÂ•ñÂìÅÈÖçÁΩÆÁöÑÂÆåÊï¥ÊÄß
 * @returns {Object} È™åËØÅÁªìÊûú
 */
function validatePrizeConfig() {
  const results = {
    valid: true,
    errors: [],
    warnings: []
  }

  // È™åËØÅÂ•ñÂìÅÊï∞Èáè
  if (STANDARD_PRIZES.length !== LOTTERY_CONFIG.wheelSize) {
    results.valid = false
    results.errors.push(`Â•ñÂìÅÊï∞Èáè‰∏çÂåπÈÖç: ${STANDARD_PRIZES.length} !== ${LOTTERY_CONFIG.wheelSize}`)
  }

  // È™åËØÅËßíÂ∫¶ÈÖçÁΩÆ
  const expectedAngles = Array.from({ length: 8 }, (_, i) => i * 45)
  STANDARD_PRIZES.forEach((prize, index) => {
    if (prize.angle !== expectedAngles[index]) {
      results.valid = false
      results.errors.push(`Â•ñÂìÅ${prize.id}ËßíÂ∫¶ÈîôËØØ: ${prize.angle} !== ${expectedAngles[index]}`)
    }
  })

  // È™åËØÅÊ¶ÇÁéáÊÄªÂíå
  const totalProbability = STANDARD_PRIZES.reduce((sum, prize) => sum + prize.probability, 0)
  if (Math.abs(totalProbability - 1.0) > 0.01) {
    results.valid = false
    results.errors.push(`Ê¶ÇÁéáÊÄªÂíåÈîôËØØ: ${totalProbability.toFixed(3)} !== 1.000`)
  }

  // È™åËØÅÂøÖË¶ÅÂ≠óÊÆµ
  STANDARD_PRIZES.forEach(prize => {
    const requiredFields = ['id', 'name', 'angle', 'color', 'type', 'probability']
    requiredFields.forEach(field => {
      if (prize[field] === undefined || prize[field] === null) {
        results.valid = false
        results.errors.push(`Â•ñÂìÅ${prize.id}Áº∫Â∞ëÂ≠óÊÆµ: ${field}`)
      }
    })
  })

  return results
}

module.exports = {
  getStandardPrizes,
  getLotteryConfig,
  getFallbackPrizes,
  validatePrizeConfig,
  STANDARD_PRIZES,
  LOTTERY_CONFIG,
  FALLBACK_PRIZES
} 